package com.eomcs.util;

public class LinkedList {

  private LinkedList linkedList;

  Node first; 

  Node last;

  int size;

  public void add(Object value) {
    Node newNode = new Node();
    newNode.value = value;

    if (first == null) {
      last = first = newNode;
    } else {
      last.next = newNode;
      last = newNode;
    }

    this.size++;
  }


  public Object get(int index) {
    if (index < 0 || index >= size)
      return null;

    Node cursor = first;
    for (int i = 0; i < index; i++) {
      cursor = cursor.next; //first.next 주소값을 이용해서 움직인다, cursor는 이동후 그 노드주소
    }

    return cursor.value;

  }


  public void add(int index, Object value) { //insert인 경우
    if (index < 0 || index >= size)
      return;

    Node newNode = new Node();
    newNode.value = value;

    Node cursor = first;
    for (int i = 0; i < index - 1; i++) {
      cursor = cursor.next;
    }

    if (index == 0) { //first의 주소는 노트넥스트주소가 된다,밀린다
      newNode.next = first;
      first = newNode; //뉴노드의 주소가 펄스트 주소가된다

    } else {
      newNode.next = cursor.next; //연결이 끊어지기 때문에 커서 넥스트주소란에 뉴노트값을 받는다
      cursor.next = newNode;
    }


    this.size++;
  }

  static class Node {
    Object value;
    Node next;
  }
}
