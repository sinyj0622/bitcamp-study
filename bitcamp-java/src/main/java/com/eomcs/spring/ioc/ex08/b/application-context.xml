<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
        
        <!-- 의존 객체를 자동 주입하는 기능을 쓰고 싶어요! 
        => 그 일을 할 객체를 등록하세요
        어떤 객체인가요?
        => AutowiredAnnotationBeanPostProcessor
        이 객체는 어떻게 사용하니?
        => 셋터 메서드 또는 필드에 @Autowired를 붙이면 됩니다.
        -->
        
    <!--@Autowired 애노테이션을 셋터 메서드에 붙였다고 해서
        의존 객체가 자동 주입되는 것이 아니다.
        @Autowired 애노테이션이 붙은 셋터에 대해
        프로퍼티 값을 자동으로 주입해주는 도우미를 등록해야 한다.

        @Autowired 애노테이션 도우미 등록방법:
        다음 클래스의 객체를 등록하면 된다.
        org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor
        -->
        
        <!-- 동작원리:
        => Spring IoC 컨테이너가 설정 파일에 적혀있는대로 객체를 생성한다.
        => 객체 생성 후 작업을 수행하는 객체가 등록되어 있다면 실행한다.
        => AutowiredAnnotationBeanPostProcessor가 객체 생성 후
          @Autowired 애노테이션을 검사하여
          이 애노테이션이 붙은 프로퍼티 값을 자동 주입하는 일을 한다.
          -->
          
          <!-- 객체 생성 후 작업을 수행하는 역할자를 정의하는 방법
          => BeanPostProcessor 규칙에 따라 클래스를 정의한 후 객체를 등록하면 된다.
         빈 생성 이후에 이 애노테이션을 처리할 BeanPostProcessor를 등록하면 된다.
         그러면 스프링 IoC 컨테이너는 빈을 모두 생성한 후에
         @Autowired 애노테이션을 처리하기 위해 이 객체의 메서드를 호출할 것이다.
         다음 객체를 스프링 IoC 컨테이너에 등록하지 않으면,
         @Autowired 애노테이션은 처리되지 않는다. 
    -->
    
      <!-- BeanPostProcessor 인터페이스
         => 스프링 IoC 컨테이너는 객체 중에 이 인터페이스를 구현한 객체가 있다면,
            다른 모든 객체를 생성한 후에
            이 구현체의 postProcess....() 메서드를 호출하여 
            빈 생성 이후의 마무리 작업을 진행시킨다.
         => 그래서 인터페이스의 이름이 BeanPostProcessor(객체 생성 후 처리기) 인 것이다.
    -->
    
     
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
    
    <bean id="c1" class="com.eomcs.spring.ioc.ex08.b.Car">
        <property name="model" value="티코"/>
        <property name="maker" value="비트자동차"/>
        <property name="cc" value="890"/>
        <property name="auto" value="true"/>
        <!-- 
         <property name="engine" ref="e1"/>
         -->
        <!-- Engine 객체를 주입하는 설정이 없다 -->
       
    </bean>
    
    <bean id="e1" class="com.eomcs.spring.ioc.ex08.b.Engine">
        <property name="maker" value="비트자동차"/>
        <property name="valve" value="16"/>
        <property name="cylinder" value="4"/>
    </bean>
   
</beans>






